# yaml-language-server: $schema=https://goreleaser.com/static/schema.json
# Make sure to check the documentation at http://goreleaser.com

before:
  hooks:
    - go mod tidy
    - ./scripts/completions.sh

builds:
  - env:
      - CGO_ENABLED=0
    goos:
      - linux
      - windows
      - darwin
    goarch:
      - amd64
      - arm64
    binary: liferay-{{ .Os }}-{{ .Arch }}
    mod_timestamp: '{{ .CommitTimestamp }}'
    flags:
      - -trimpath
    ldflags:
      - -X liferay.com/liferay/cli/cmd.Version={{ .Version }}

archives:
  - name_template: "{{ .Binary }}"
    format: binary
#    replacements:
#      darwin: Darwin
#      linux: Linux
#      windows: Windows
#      amd64: x86_64
    files:
      - README.md
      - LICENSE.md
      - completions/*
      - manpages/*

# brews:
#   - tap:
#       owner: liferay
#       name: liferay-cli
#     folder: Formula
#     name: liferay
#     homepage:  https://github.com/liferay/liferay-cli
#     description: Tool for building and running Liferay Client Extensions
#     license: Apache-2.0

#     # Setting this will prevent goreleaser to actually try to commit the updated
#     # formula - instead, the formula file will be stored on the dist folder only,
#     # leaving the responsibility of publishing it to the user.
#     # If set to auto, the release will not be uploaded to the homebrew tap
#     # in case there is an indicator for prerelease in the tag e.g. v1.0.0-rc1
#     # Default is false.
#     skip_upload: "auto"

#     test: |
#       system "#{bin}/liferay --version"
#     install: |-
#       replaces = ["-amd64", "-arm64", "-darwin", "-linux"]
#       Dir.glob("./*").sort.each do |entry|
#         origin = File.basename(entry, File.extname(entry))
#         printf "Before File: %s\n", entry
#         newEntry = origin
#         replaces.each do |rep|
#           if newEntry.include?(rep)
#             newEntry = newEntry.gsub(rep, "")
#           end
#         end
#         printf "After File: %s\n", newEntry
#         File.rename(entry, newEntry)
#       end
#       bin.install "liferay"

checksum:
  name_template: 'checksums.txt'
  algorithm: sha256
  disable: false

snapshot:
  name_template: "{{ .Tag }}-next"

release:
  # Repo in which the release will be created.
  github:
    owner: liferay
    name: liferay-cli

  # If set to auto, will mark the release as not ready for production
  # in case there is an indicator for this in the tag e.g. v1.0.0-rc1
  # If set to true, will mark the release as not ready for production.
  # Default is false.
  prerelease: auto

  # use to change the name of the release.
  name_template: "{{.Tag}}"

  # You can disable this pipe in order to not upload any artifacts.
  # Defaults to false.
  disable: false

changelog:
  # Set it to true if you wish to skip the changelog generation.
  # This may result in an empty release notes on GitHub/GitLab/Gitea.
  skip: false

  # Sorts the changelog by the commit's messages.
  # Could either be asc, desc or empty
  # Default is empty
  sort: asc

  filters:
    # Commit messages matching the regexp listed here will be removed from
    # the changelog
    # Default is empty
    exclude:
      - '^chore:'
      - '^docs:'
      - '^unused'
      - '^wordsmith'
      - typo
      - Merge pull request
  groups:
    - title: Dependency updates
      regexp: "^.*(feat|fix)\\(deps\\)*:+.*$"
      order: 300
    - title: 'New Features'
      regexp: "^.*feat[(\\w)]*:+.*$"
      order: 100
    - title: 'Bug fixes'
      regexp: "^.*fix[(\\w)]*:+.*$"
      order: 200
    - title: 'Documentation updates'
      regexp: "^.*docs[(\\w)]*:+.*$"
      order: 400
    - title: Other work
      order: 9999
